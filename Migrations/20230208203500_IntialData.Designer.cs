// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using listtodo;

#nullable disable

namespace listtodo.Migrations
{
    [DbContext(typeof(TareasContext))]
    [Migration("20230208203500_IntialData")]
    partial class IntialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("listtodo.models.Categoria", b =>
                {
                    b.Property<Guid>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("Peso")
                        .HasColumnType("integer");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria", (string)null);

                    b.HasData(
                        new
                        {
                            CategoriaId = new Guid("5a43313d-6e2a-4666-b098-14c6202585cd"),
                            Nombre = "Actividades Profesionales",
                            Peso = 20
                        },
                        new
                        {
                            CategoriaId = new Guid("20047306-0797-461d-800d-74e736547342"),
                            Nombre = "Actividades Personales",
                            Peso = 30
                        },
                        new
                        {
                            CategoriaId = new Guid("2ccf4029-8541-40f4-b897-76179426ec58"),
                            Nombre = "Actividades Académicas",
                            Peso = 60
                        });
                });

            modelBuilder.Entity("listtodo.models.Tarea", b =>
                {
                    b.Property<Guid>("TareaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PrioridadTarea")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("TareaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Tarea", (string)null);

                    b.HasData(
                        new
                        {
                            TareaId = new Guid("56e5f716-7371-42b5-b406-f71ec23e610e"),
                            CategoriaId = new Guid("5a43313d-6e2a-4666-b098-14c6202585cd"),
                            Descripcion = "Realizar el curso en cualquier momento",
                            Fecha_Creacion = new DateTime(2023, 2, 8, 20, 35, 0, 124, DateTimeKind.Utc).AddTicks(5172),
                            PrioridadTarea = 0,
                            Titulo = "Realizar curso de Flask"
                        },
                        new
                        {
                            TareaId = new Guid("56e5f716-7371-42b5-b406-f71ec23e610a"),
                            CategoriaId = new Guid("5a43313d-6e2a-4666-b098-14c6202585cd"),
                            Descripcion = "Realizar el curso en cualquier momento",
                            Fecha_Creacion = new DateTime(2023, 2, 8, 20, 35, 0, 124, DateTimeKind.Utc).AddTicks(5182),
                            PrioridadTarea = 0,
                            Titulo = "Realizar curso de Python"
                        },
                        new
                        {
                            TareaId = new Guid("56e5f716-7371-42b5-b406-f71ec23e610b"),
                            CategoriaId = new Guid("20047306-0797-461d-800d-74e736547342"),
                            Descripcion = "Realizar el curso en cualquier momento",
                            Fecha_Creacion = new DateTime(2023, 2, 8, 20, 35, 0, 124, DateTimeKind.Utc).AddTicks(5185),
                            PrioridadTarea = 0,
                            Titulo = "Ir a casa de mi mamá"
                        });
                });

            modelBuilder.Entity("listtodo.models.Tarea", b =>
                {
                    b.HasOne("listtodo.models.Categoria", "Categoria")
                        .WithMany("Tareas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("listtodo.models.Categoria", b =>
                {
                    b.Navigation("Tareas");
                });
#pragma warning restore 612, 618
        }
    }
}
